{"randomArticles":[{"articleTitle":"JS中数据类型的转换","articleAbstractText":"数据类型的转换 Question  JavaScript** 中如何进行数据类型的转换？**  数据类型转换介绍 JavaScript** 是一种动态类型语言，变量没有类型限制，可以随时赋予任意值。** var x = y ? 1 : 'a';  上面代码中，变量x到底是数值还是字符串，取决于另一个变量y的值。y为true时，x是一个数值；y为false时，x是一个字符串。这意味着，x的类型没法在编译阶段就知道，必须等到运行时才能知道。 虽然变量的数据类型是不确定的，但是各种运算符对数据类型是有要求的。如果运算符发现，运算子的类型与预期不符，就会自动转换类型。比如，减法运算符预期左右两侧的运算子应该是数值，如果不是，就会自动将它们转为数值。 '4' - '3' // 1  上面代码中，虽然是两个字符串相减，但是依然得到数值 1，原因就在于 JavaScript 将运算子自动转为了数值。 所以接下来我们就来看一下 JavaScript 中如何进行数据类型转换。 强制转换（显式转换） 强制转换主要指使用Number()、String()和Boolean()三个函数，手动将各种类型的值，分别....","articleStatus":0,"articlePermalink":"/articles/2024/08/16/1723796737620.html","articleImg1URL":"https://b3logfile.com/bing/20200415.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"git查询提交记录","articleAbstractText":"git查询提交记录","articleStatus":0,"articlePermalink":"/articles/2024/04/01/1711936168441.html","articleImg1URL":"https://b3logfile.com/bing/20231007.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"关于vue2中的computed计算属性","articleAbstractText":"面试题：computed和methods有什么区别  标准而浅显的回答   在使用时，computed当做属性使用，而methods则当做方法调用 computed可以具有getter和setter，因此可以赋值，而methods不行 computed无法接收多个参数，而methods可以 computed具有缓存，而methods没有   更接近底层原理的回答  vue对methods的处理比较简单，只需要遍历methods配置中的每个属性，将其对应的函数使用bind绑定当前组件实例后复制其引用到组件实例中即可 而vue对computed的处理会稍微复杂一些。 当组件实例触发生命周期函数beforeCreate后，它会做一系列事情，其中就包括对computed的处理 它会遍历computed配置中的所有属性，为每一个属性创建一个Watcher对象，并传入一个函数，该函数的本质其实就是computed配置中的getter，这样一来，getter运行过程中就会收集依赖 但是和渲染函数不同，为计算属性创建的Watcher不会立即执行，因为要考虑到该计算属性是否会被渲染函数使用，如果没有使用....","articleStatus":0,"articlePermalink":"/articles/2024/06/27/1719457607161.html","articleImg1URL":"https://b3logfile.com/bing/20201108.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}
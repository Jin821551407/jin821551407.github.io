{"relevantArticles":[{"articleTitle":"描述下列代码的执行结果","articleAbstractText":"描述下列代码的执行结果 第1题 foo(typeof a); function foo(p) { &nbsp; &nbsp;console.log(this); &nbsp; &nbsp;console.log(p); &nbsp; &nbsp;console.log(typeof b); &nbsp; &nbsp;let b = 0; }   参考答案： 报错，报错的位置在 console.log(typeof b); 报错原因：ReferenceError: Cannot access 'b' before initialization   解析： 这道题考查的是 ES6 新增的声明变量关键字 let 以及暂时性死区的知识。let 和以前的 var 关键字不一样，无法在 let 声明变量之前访问到该变量，所以在 typeof b 的地方就会报错。  第2题 class Foo { &nbsp; &nbsp;constructor(arr) { &nbsp; &nbsp; &nbsp; &nbsp;this.arr = arr; &nbsp; } &nbsp; &nbsp;bar(n....","articleStatus":0,"articlePermalink":"/articles/2025/08/05/1754371423463.html","articleImg1URL":"https://b3logfile.com/bing/20240517.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"数组去重有哪些方法","articleAbstractText":"数组去重有哪些方法? // 数字或字符串数组去重，效率高 function unique(arr) { var result = {}; // 利用对象属性名的唯一性来保证不重复 for (var i = 0; i &lt; arr.length; i++) { if (!result[arr[i]]) { result[arr[i]] = true; } } return Object.keys(result); // 获取对象所有属性名的数组 } // 任意数组去重，适配范围广，效率低 function unique(arr) { var result = []; // 结果数组 for (var i = 0; i &lt; arr.length; i++) { if (!result.includes(arr[i])) { result.push(arr[i]); } } return result; } // 利用ES6的Set去重，适配范围广，效率一般，书写简单 function unique(arr) { return [...new Set(arr)] } functio....","articleStatus":0,"articlePermalink":"/articles/2025/08/02/1754103114814.html","articleImg1URL":"https://b3logfile.com/bing/20250309.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"将ES6构造函数转换为ES5","articleAbstractText":"1. 根据下面 ES6 构造函数的书写方式，要求写出 ES5 的 class Example { &nbsp;constructor(name) { &nbsp; &nbsp;this.name = name; } &nbsp;init() { &nbsp; &nbsp;const fun = () =&gt; { console.log(this.name) } &nbsp; &nbsp;fun(); } } const e = new Example('Hello'); e.init();   参考答案： function Example(name) { &nbsp; 'use strict'; &nbsp; if (!new.target) { &nbsp; &nbsp; &nbsp; &nbsp;throw new TypeError('Class constructor cannot be invoked without new'); &nbsp; } &nbsp; this.name = name; } Object.defineProperty(Example.proto....","articleStatus":0,"articlePermalink":"/articles/2025/08/02/1754101916959.html","articleImg1URL":"https://b3logfile.com/bing/20220322.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}
{"randomArticles":[{"articleTitle":"手写Promise: 1.构造器的实现","articleAbstractText":"class MyPromise { PENDING = 'pending' FULLFILLED = 'fullfilled' REJECTED = 'rejected' constructor(excutor) { this._state = this.PENDING this._result = undefined const resolve = (data) =&gt; { this._changeState(data, this.FULLFILLED) } const reject = (reason) =&gt; { this._changeState(reason, this.REJECTED) } excutor(resolve, reject) } _changeState(result, state) { if (this._state !== this.PENDING) return this._result = result this._state = state } }","articleStatus":0,"articlePermalink":"/articles/2024/12/29/1735480010074.html","articleImg1URL":"https://b3logfile.com/bing/20200810.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"JS中数据类型的转换","articleAbstractText":"数据类型的转换 Question  JavaScript** 中如何进行数据类型的转换？**  数据类型转换介绍 JavaScript** 是一种动态类型语言，变量没有类型限制，可以随时赋予任意值。** var x = y ? 1 : 'a';  上面代码中，变量x到底是数值还是字符串，取决于另一个变量y的值。y为true时，x是一个数值；y为false时，x是一个字符串。这意味着，x的类型没法在编译阶段就知道，必须等到运行时才能知道。 虽然变量的数据类型是不确定的，但是各种运算符对数据类型是有要求的。如果运算符发现，运算子的类型与预期不符，就会自动转换类型。比如，减法运算符预期左右两侧的运算子应该是数值，如果不是，就会自动将它们转为数值。 '4' - '3' // 1  上面代码中，虽然是两个字符串相减，但是依然得到数值 1，原因就在于 JavaScript 将运算子自动转为了数值。 所以接下来我们就来看一下 JavaScript 中如何进行数据类型转换。 强制转换（显式转换） 强制转换主要指使用Number()、String()和Boolean()三个函数，手动将各种类型的值，分别....","articleStatus":0,"articlePermalink":"/articles/2024/08/16/1723796737620.html","articleImg1URL":"https://b3logfile.com/bing/20230811.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"手写Promise: 2.then方法返回的时机","articleAbstractText":"class MyPromise { PENDING = 'pending' FULLFILLED = 'fullfilled' REJECTED = 'rejected' _handlers = [] constructor(excutor) { this._state = this.PENDING this._result = undefined const resolve = (data) =&gt; { this._changeState(data, this.FULLFILLED) } const reject = (reason) =&gt; { this._changeState(reason, this.REJECTED) } excutor(resolve, reject) } _changeState(result, state) { if (this._state !== this.PENDING) return this._result = result this._state = state this._run() } // 执行当前调用then的回调队列 _r....","articleStatus":0,"articlePermalink":"/articles/2024/12/29/1735481128434.html","articleImg1URL":"https://b3logfile.com/bing/20200423.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"git查询提交记录","articleAbstractText":"git查询提交记录","articleStatus":0,"articlePermalink":"/articles/2024/04/01/1711936168441.html","articleImg1URL":"https://b3logfile.com/bing/20231007.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}
{"randomArticles":[{"articleTitle":"git查询提交记录","articleAbstractText":"git查询提交记录","articleStatus":0,"articlePermalink":"/articles/2024/04/01/1711936168441.html","articleImg1URL":"https://b3logfile.com/bing/20231007.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"手写call,apply,bind","articleAbstractText":"手写call,apply,bind myCall  1.call中的this指向是指向调用call的那个函数,直接调用this,这个函数中的this会指向全局,将this绑定到ctx对象中调用,这个函数中的this则会指向传入的ctx 2.将call中的this绑定到ctx中时,使用Symbol保证此属性值唯一,使用defineProperty保证此属性不可被遍历 3.调用完成后将此属性删除,并将返回值返回 4.ctx为null或者undefined则ctx赋值为全局对象,否则全转换为Object类型 5.apply 和 call 的区别只是传参方式不同,其余都一致  Function.prototype.myCall = function (ctx, ...args) { if (ctx === null || ctx === undefined) { ctx = globalThis } else { ctx = Object(ctx) } const key = Symbol('temp') Object.defineProperty(ctx, key, { enumerable....","articleStatus":0,"articlePermalink":"/articles/2024/09/05/1725525546049.html","articleImg1URL":"https://b3logfile.com/bing/20181220.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"}]}